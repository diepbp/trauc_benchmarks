(set-logic QF_S)
(set-option :strings-exp true)
(set-option :produce-models true)
(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_5 () String)
(declare-fun literal_7 () String)
(declare-fun x_8 () String)
(declare-fun literal_9 () String)
(declare-fun x_10 () String)
(declare-fun literal_1 () String)
(declare-fun x_11 () String)
(declare-fun literal_12 () String)
(declare-fun x_13 () String)
(declare-fun x_14 () String)
(assert (= literal_7 "\x5c\x6e\x23\x5c\x6e\x23\x20\x53\x74\x72\x75\x63\x74\x75\x72\x65\x20\x66\x6f\x72\x20\x54\x61\x62\x6c\x65\x20\x60"))
(assert (= x_8 (str.++ literal_7 sigmaStar_0)))
(assert (= literal_9 "\x60"))
(assert (= x_10 (str.++ x_8 literal_9)))
(assert (= literal_1 "\x5c\x6e"))
(assert (= x_11 (str.++ x_10 literal_1)))
(assert (= literal_12 "\x23"))
(assert (= x_13 (str.++ x_11 literal_12)))
(assert (= x_14 (str.++ x_13 literal_1)))
(assert (str.in.re x_14 (re.++ (re.* re.allchar) (re.++ (str.to.re "\x5c\x3c\x53\x43\x52\x49\x50\x54") (re.* re.allchar)))))
(check-sat)
(get-model)
