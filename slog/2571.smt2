(set-logic QF_S)
(set-option :strings-exp true)
(set-option :produce-models true)
(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun sigmaStar_2 () String)
(declare-fun sigmaStar_3 () String)
(declare-fun literal_8 () String)
(declare-fun x_7 () String)
(declare-fun literal_6 () String)
(declare-fun literal_5 () String)
(declare-fun x_11 () String)
(declare-fun x_13 () String)
(declare-fun literal_14 () String)
(declare-fun x_15 () String)
(declare-fun literal_10 () String)
(declare-fun x_16 () String)
(assert (= literal_8 "\x2f"))
(assert (= literal_6 "\x2f"))
(assert (= literal_5 "\x77\x64\x69\x72"))
(assert (or (= x_7 literal_6) (= x_7 literal_5)))
(assert (= x_11 (str.++ literal_8 x_7)))
(assert (or (= x_13 x_11) (= x_13 literal_6) (= x_13 literal_5)))
(assert (= literal_14 "\x2f"))
(assert (= x_15 (str.++ x_13 literal_14)))
(assert (= literal_10 "\x6e\x61\x6d\x65"))
(assert (= x_16 (str.++ x_15 literal_10)))
(assert (str.in.re x_16 (re.++ (re.* re.allchar) (re.++ (str.to.re "\x2f\x65\x76\x69\x6c") (re.* re.allchar)))))
(check-sat)
(get-model)
