(set-logic QF_S)
(set-option :strings-exp true)
(set-option :produce-models true)
(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun sigmaStar_2 () String)
(declare-fun literal_22 () String)
(assert (= literal_22 "\x3c\x61\x20\x68\x72\x65\x66\x3d\x22\x6a\x61\x76\x61\x73\x63\x72\x69\x70\x74\x3a\x73\x65\x6c\x65\x63\x74\x5f\x61\x6c\x6c\x5f\x69\x6e\x28\x27\x54\x41\x42\x4c\x45\x27\x2c\x20\x6e\x75\x6c\x6c\x2c\x20\x27\x63\x61\x74\x65\x67\x6f\x72\x79\x71\x75\x65\x73\x74\x69\x6f\x6e\x73\x27\x29\x3b\x22\x3e\x73\x65\x6c\x65\x63\x74\x61\x6c\x6c\x3c\x2f\x61\x3e\x20\x2f\x20\x3c\x61\x20\x68\x72\x65\x66\x3d\x22\x6a\x61\x76\x61\x73\x63\x72\x69\x70\x74\x3a\x64\x65\x73\x65\x6c\x65\x63\x74\x5f\x61\x6c\x6c\x5f\x69\x6e\x28\x27\x54\x41\x42\x4c\x45\x27\x2c\x20\x6e\x75\x6c\x6c\x2c\x20\x27\x63\x61\x74\x65\x67\x6f\x72\x79\x71\x75\x65\x73\x74\x69\x6f\x6e\x73\x27\x29\x3b\x22\x3e\x73\x65\x6c\x65\x63\x74\x6e\x6f\x6e\x65\x3c\x2f\x61\x3e\x3c\x2f\x74\x64\x3e\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x22\x72\x69\x67\x68\x74\x22\x3e\x3c\x62\x3e\x26\x6e\x62\x73\x70\x3b\x77\x69\x74\x68\x73\x65\x6c\x65\x63\x74\x65\x64\x3a\x3c\x2f\x62\x3e\x3c\x2f\x74\x64\x3e\x3c\x2f\x74\x72\x3e\x3c\x74\x72\x3e\x3c\x74\x64\x3e"))
(assert (str.in.re literal_22 (re.++ (re.* re.allchar) (re.++ (str.to.re "\x5c\x3c\x53\x43\x52\x49\x50\x54") (re.* re.allchar)))))
(check-sat)
(get-model)
