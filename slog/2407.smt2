(set-logic QF_S)
(set-option :strings-exp true)
(set-option :produce-models true)
(declare-fun sigmaStar_0 () String)
(declare-fun literal_3 () String)
(declare-fun x_4 () String)
(declare-fun literal_2 () String)
(declare-fun literal_1 () String)
(declare-fun x_5 () String)
(declare-fun literal_6 () String)
(declare-fun x_7 () String)
(declare-fun literal_8 () String)
(declare-fun x_9 () String)
(assert (= literal_3 "\x3c\x74\x64\x20"))
(assert (= literal_2 ""))
(assert (= literal_1 "\x63\x6c\x61\x73\x73\x3d\x22\x68\x69\x67\x68\x6c\x69\x67\x68\x74\x22"))
(assert (or (= x_4 literal_2) (= x_4 literal_1)))
(assert (= x_5 (str.++ literal_3 x_4)))
(assert (= literal_6 "\x3e\x3c\x74\x65\x78\x74\x61\x72\x65\x61\x20\x6e\x61\x6d\x65\x3d\x5c\x22\x73\x63\x61\x6c\x65\x73\x63\x61\x6c\x65\x5c\x22\x20\x63\x6f\x6c\x73\x3d\x5c\x22\x35\x30\x5c\x22\x20\x72\x6f\x77\x73\x3d\x5c\x22\x32\x5c\x22\x20\x77\x72\x61\x70\x3d\x5c\x22\x76\x69\x72\x74\x75\x61\x6c\x5c\x22\x3e"))
(assert (= x_7 (str.++ x_5 literal_6)))
(assert (= literal_8 "\x3c\x2f\x74\x65\x78\x74\x61\x72\x65\x61\x3e"))
(assert (= x_9 (str.++ x_7 literal_8)))
(assert (str.in.re x_9 (re.++ (re.* re.allchar) (re.++ (str.to.re "\x5c\x3c\x53\x43\x52\x49\x50\x54") (re.* re.allchar)))))
(check-sat)
(get-model)
