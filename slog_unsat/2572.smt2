(set-logic QF_S)
(set-option :strings-exp true)
(set-option :produce-models true)
(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun sigmaStar_2 () String)
(declare-fun literal_7 () String)
(declare-fun x_6 () String)
(declare-fun literal_4 () String)
(declare-fun literal_5 () String)
(declare-fun x_8 () String)
(declare-fun x_10 () String)
(declare-fun literal_13 () String)
(declare-fun x_14 () String)
(declare-fun literal_12 () String)
(declare-fun x_15 () String)
(assert (= literal_7 "\x2f"))
(assert (= literal_4 "\x77\x64\x69\x72"))
(assert (= literal_5 "\x2f"))
(assert (or (= x_6 literal_4) (= x_6 literal_5)))
(assert (= x_8 (str.++ literal_7 x_6)))
(assert (or (= x_10 x_8) (= x_10 literal_4) (= x_10 literal_5)))
(assert (= literal_13 "\x2f"))
(assert (= x_14 (str.++ x_10 literal_13)))
(assert (= literal_12 "\x6f\x6c\x64\x6e\x61\x6d\x65"))
(assert (= x_15 (str.++ x_14 literal_12)))
(assert (str.in.re x_15 (re.++ (re.* re.allchar) (re.++ (str.to.re "\x2f\x65\x76\x69\x6c") (re.* re.allchar)))))
(check-sat)
(get-model)
