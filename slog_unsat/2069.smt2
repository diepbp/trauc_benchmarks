(set-logic QF_S)
(set-option :strings-exp true)
(set-option :produce-models true)
(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_2 () String)
(declare-fun literal_11 () String)
(declare-fun x_13 () String)
(declare-fun literal_8 () String)
(declare-fun literal_10 () String)
(declare-fun literal_7 () String)
(declare-fun x_14 () String)
(declare-fun literal_15 () String)
(declare-fun x_16 () String)
(assert (= literal_11 "\x3c\x69\x66\x72\x61\x6d\x65\x20\x6e\x61\x6d\x65\x3d\x5c\x22\x74\x68\x65\x6d\x65\x5c\x22\x20\x73\x72\x63\x3d\x5c\x22"))
(assert (= literal_8 "\x74\x68\x65\x6d\x65\x2f\x73\x63\x72\x65\x65\x6e\x73\x68\x6f\x74\x2e\x70\x6e\x67"))
(assert (= literal_10 ""))
(assert (= literal_7 "\x74\x68\x65\x6d\x65\x2f\x73\x63\x72\x65\x65\x6e\x73\x68\x6f\x74\x2e\x6a\x70\x67"))
(assert (or (= x_13 literal_8) (= x_13 literal_10) (= x_13 literal_7)))
(assert (= x_14 (str.++ literal_11 x_13)))
(assert (= literal_15 "\x5c\x22\x20\x68\x65\x69\x67\x68\x74\x3d\x5c\x22\x32\x30\x30\x5c\x22\x20\x77\x69\x64\x74\x68\x3d\x5c\x22\x34\x30\x30\x5c\x22\x3e\x3c\x2f\x69\x66\x72\x61\x6d\x65\x3e\x3c\x2f\x74\x64\x3e"))
(assert (= x_16 (str.++ x_14 literal_15)))
(assert (str.in.re x_16 (re.++ (re.* re.allchar) (re.++ (str.to.re "\x5c\x3c\x53\x43\x52\x49\x50\x54") (re.* re.allchar)))))
(check-sat)
(get-model)
