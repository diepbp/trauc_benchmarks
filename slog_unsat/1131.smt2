(set-logic QF_S)
(set-option :strings-exp true)
(set-option :produce-models true)
(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun literal_12 () String)
(assert (= literal_12 "\x3c\x74\x72\x3e\x3c\x74\x64\x3e\x3c\x62\x3e\x61\x74\x74\x61\x63\x68\x6d\x65\x6e\x74\x73\x3c\x2f\x62\x3e\x3c\x64\x69\x76\x20\x61\x6c\x69\x67\x6e\x3d\x22\x72\x69\x67\x68\x74\x22\x3e\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x22\x62\x75\x74\x74\x6f\x6e\x22\x20\x76\x61\x6c\x75\x65\x3d\x22\x72\x65\x6d\x6f\x76\x65\x61\x6c\x6c\x61\x74\x74\x61\x63\x68\x6d\x65\x6e\x74\x73\x22\x20\x6f\x6e\x63\x6c\x69\x63\x6b\x3d\x22\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2e\x65\x64\x69\x74\x66\x6f\x72\x6d\x2e\x61\x63\x74\x69\x6f\x6e\x2e\x76\x61\x6c\x75\x65\x3d\x27\x72\x65\x6d\x6f\x76\x65\x61\x74\x74\x61\x63\x68\x6d\x65\x6e\x74\x73\x27\x3b\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2e\x65\x64\x69\x74\x66\x6f\x72\x6d\x2e\x73\x75\x62\x6d\x69\x74\x28\x29\x3b\x22\x2f\x3e\x3c\x2f\x64\x69\x76\x3e\x3c\x2f\x74\x64\x3e\x3c\x2f\x74\x72\x3e\x5c\x6e"))
(assert (str.in.re literal_12 (re.++ (re.* re.allchar) (re.++ (str.to.re "\x5c\x3c\x53\x43\x52\x49\x50\x54") (re.* re.allchar)))))
(check-sat)
(get-model)
