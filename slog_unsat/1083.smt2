(set-logic QF_S)
(set-option :strings-exp true)
(set-option :produce-models true)
(declare-fun sigmaStar_0 () String)
(declare-fun literal_8 () String)
(assert (= literal_8 "\x20\x3c\x61\x20\x6f\x6e\x63\x6c\x69\x63\x6b\x3d\x5c\x22\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2e\x61\x73\x73\x65\x73\x73\x6d\x65\x6e\x74\x66\x6f\x72\x6d\x2e\x61\x63\x74\x69\x6f\x6e\x2e\x76\x61\x6c\x75\x65\x3d\x27\x72\x65\x6d\x6f\x76\x65\x73\x74\x6f\x63\x6b\x63\x6f\x6d\x6d\x65\x6e\x74\x27\x3b\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2e\x61\x73\x73\x65\x73\x73\x6d\x65\x6e\x74\x66\x6f\x72\x6d\x2e\x73\x74\x6f\x63\x6b\x63\x6f\x6d\x6d\x65\x6e\x74\x69\x64\x2e\x76\x61\x6c\x75\x65\x3d\x3b\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2e\x61\x73\x73\x65\x73\x73\x6d\x65\x6e\x74\x66\x6f\x72\x6d\x2e\x73\x75\x62\x6d\x69\x74\x28\x29\x3b\x5c\x22\x3e\x20\x3c\x73\x6d\x61\x6c\x6c\x3e\x3c\x69\x3e\x26\x6c\x74\x3b\x2d\x2d\x64\x65\x6c\x65\x74\x65\x3c\x2f\x69\x3e\x3c\x2f\x73\x6d\x61\x6c\x6c\x3e\x3c\x2f\x61\x3e\x5c\x6e"))
(assert (str.in.re literal_8 (re.++ (re.* re.allchar) (re.++ (str.to.re "\x5c\x3c\x53\x43\x52\x49\x50\x54") (re.* re.allchar)))))
(check-sat)
(get-model)
