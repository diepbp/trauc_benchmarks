(set-logic QF_S)
(set-option :strings-exp true)
(set-option :produce-models true)
(declare-fun x_17 () String)
(declare-fun epsilon () String)
(declare-fun literal_8 () String)
(declare-fun literal_10 () String)
(declare-fun literal_9 () String)
(declare-fun literal_11 () String)
(declare-fun literal_12 () String)
(assert (= epsilon ""))
(assert (= literal_8 "\x2f\x2f\x6d\x69\x6d\x65\x74\x65\x78\x2e\x6c\x69\x6e\x75\x78"))
(assert (= literal_10 "\x2f\x2f\x6d\x69\x6d\x65\x74\x65\x78"))
(assert (= literal_9 "\x2f\x2f\x6d\x69\x6d\x65\x74\x65\x78\x2e\x65\x78\x65"))
(assert (= literal_11 "\x2f\x2f\x6d\x69\x6d\x65\x74\x65\x78\x2e\x64\x61\x72\x77\x69\x6e"))
(assert (= literal_12 ""))
(assert (or (= x_17 epsilon) (= x_17 literal_8) (= x_17 literal_10) (= x_17 literal_9) (= x_17 literal_11) (= x_17 literal_12)))
(assert (str.in.re x_17 (re.++ (re.* re.allchar) (re.++ (str.to.re "\x2f\x65\x76\x69\x6c") (re.* re.allchar)))))
(check-sat)
(get-model)
